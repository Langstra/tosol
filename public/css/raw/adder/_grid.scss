//	Grid System. Completely revised using SASS operators.

// Begin Main Grid CSS

// "g-r" stands for grid-row
// "col-" prefix stands for "column"

.g-r{

	// Clear for floating boxes

	&:after{@include clearfix;}

	// Making Grid Visible for debugging (Remove for production ready version)

	&.demo{
		margin-bottom:10px;
		.col{
			background:#ececec;
			text-align:center;
			border:4px solid #d5d5d5;
			color:#656565;
		}
	}

	// Base box style

	.col{
		float:left;
	}

//	Class Name			Extend Base Style		Width Config 		
	.col-1{				@extend .col;			width:100 / 12 * 1%;	}
	.col-2{				@extend .col;			width:100 / 12 * 2%;	}
	.col-3{				@extend .col;			width:100 / 12 * 3%;	}
	.col-4{				@extend .col;			width:100 / 12 * 4%;	}
	.col-5{				@extend .col;			width:100 / 12 * 5%;	}
	.col-6{				@extend .col;			width:100 / 12 * 6%;	}
	.col-7{				@extend .col;			width:100 / 12 * 7%;	}
	.col-8{				@extend .col;			width:100 / 12 * 8%;	}
	.col-9{				@extend .col;			width:100 / 12 * 9%;	}
	.col-10{			@extend .col;			width:100 / 12 * 10%;	}
	.col-11{			@extend .col;			width:100 / 12 * 11%;	}
	.col-12{			@extend .col;			width:100 / 12 * 12%;	}

//	Makes each columns width 100% below a certain pixel range. What I have in mind is a lot more complicated
// 	But I lack the time to put it all together. 

//	tablet. 
	@media #{$sr-tablet-p} {
		.col{width:100%;}
	}

}